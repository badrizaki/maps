package com.atommediastudio.googlemaps;

import android.os.Bundle;
import android.support.v4.app.FragmentActivity;

import android.content.Context;
import android.location.Criteria;
import android.location.Location;
import android.location.LocationManager;

import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.BitmapDescriptorFactory;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;

import java.util.ArrayList;
import java.util.HashMap;

public class MapsActivity extends FragmentActivity
{
	// Google Map
	private GoogleMap googleMap;

	// Latitude & Longitude
	private Double Latitude = 0.00;
	private Double Longitude = 0.00;

	ArrayList<HashMap<String, String>> location = new ArrayList<HashMap<String, String>>();
	HashMap<String, String> map;

	protected void onCreate(Bundle savedInstanceState)
	{
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_maps);

		// Location 1
		// -6.175462, 106.808422
		map = new HashMap<String, String>();
		map.put("LocationID", "1");
		map.put("Latitude", "-6.175462");
		map.put("Longitude", "106.808422");
		map.put("LocationName", "Kuantan");
		location.add(map);

		// Location 2
		// -6.175795, 106.807888
		map = new HashMap<String, String>();
		map.put("LocationID", "2");
		map.put("Latitude", "-6.175795");
		map.put("Longitude", "106.807888");
		map.put("LocationName", "Jalan Ogan");
		location.add(map);

		// Location 3
		// -6.175395, 106.807663
		map = new HashMap<String, String>();
		map.put("LocationID", "3");
		map.put("Latitude", "-6.175395");
		map.put("Longitude", "106.807663");
		map.put("LocationName", "Jalan Berumun");
		location.add(map);

		// *** Display Google Map
		googleMap = ((SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.googleMap)).getMap();
		
		// Enable MyLocation Layer of Google Map
        googleMap.setMyLocationEnabled(true);
        // Get LocationManager object from System Service LOCATION_SERVICE
        LocationManager locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
        // Create a criteria object to retrieve provider
        Criteria criteria = new Criteria();
        // Get the name of the best provider
        String provider = locationManager.getBestProvider(criteria, true);
        // Get Current Location
        Location myLocation = locationManager.getLastKnownLocation(provider);
        // Get latitude of the current location
        double latitude = myLocation.getLatitude();
        // Get longitude of the current location
        double longitude = myLocation.getLongitude();
        // Create a LatLng object for the current location
        LatLng latLng = new LatLng(latitude, longitude);

		// *** Focus & Zoom
		/*Latitude = Double.parseDouble(location.get(0).get("Latitude").toString());
		Longitude = Double.parseDouble(location.get(0).get("Longitude").toString());
		LatLng coordinate = new LatLng(Latitude, Longitude);*/
		googleMap.setMapType(com.google.android.gms.maps.GoogleMap.MAP_TYPE_NORMAL);
		googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(latLng, 17));

		// *** Marker (Loop)
		for (int i = 0; i < location.size(); i++)
        {
			Latitude = Double.parseDouble(location.get(i).get("Latitude").toString());
			Longitude = Double.parseDouble(location.get(i).get("Longitude").toString());
			String name = location.get(i).get("LocationName").toString();
			MarkerOptions marker = new MarkerOptions().position(new LatLng(Latitude, Longitude)).title(name);
			marker.icon(BitmapDescriptorFactory.fromResource(R.drawable.marker));
			googleMap.addMarker(marker);
		}


		// Setting onclick event listener for the map
      	googleMap.setOnMapClickListener(new GoogleMap.OnMapClickListener()
      	{
          	@Override
          	public void onMapClick(LatLng point)
          	{
              	// Already two locations
              	if (MarkerPoints.size() > 1)
              	{
                  	MarkerPoints.clear();
                	googleMap.clear();
              	}
 
              	// Adding new item to the ArrayList
              	MarkerPoints.add(point);
 
              	// Creating MarkerOptions
              	MarkerOptions options = new MarkerOptions();
 
              	// Setting the position of the marker
              	options.position(point);

				/**
				* For the start location, the color of marker is GREEN and
				* for the end location, the color of marker is RED.
				*/
              	if (MarkerPoints.size() == 1) {
                  	options.icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_GREEN));
              	} else if (MarkerPoints.size() == 2) {
                	options.icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_RED));
              	}

				// Add new marker to the Google Map Android API V2
				googleMap.addMarker(options);
 
              	// Checks, whether start and end locations are captured
              	if (MarkerPoints.size() >= 2)
              	{ 
					LatLng origin = MarkerPoints.get(0);
					LatLng dest = MarkerPoints.get(1);

					// Getting URL to the Google Directions API
					String url = getUrl(origin, dest);
					Log.d("onMapClick", url.toString());
					FetchUrl FetchUrl = new FetchUrl();

					// Start downloading json data from Google Directions API
					FetchUrl.execute(url);
					//move map camera
					googleMap.moveCamera(CameraUpdateFactory.newLatLng(origin));
					googleMap.animateCamera(CameraUpdateFactory.zoomTo(11));
              	}
 
          	}
      	});
	}

}